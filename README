
*** README -   pdfpc  *** 
*** Public Domain Functional Programming in C *** 

This small project is aimed at creating some public-domain 
C code (using a functional-programming approach) for 
manipulating data structures - mostly arrays.  

The aim is for pdfpc to eventually cover all of the following 
areas. Note that Lpred and Lsucc are different to Haskell's 
"pred" and "succ" functions.  
Those functions work on enums - these ones work on arrays.  

*  All - returns TRUE if all elements in an array meet a condition. 
*  Any - returns TRUE if at least one element in an array meets 
   a condition. 
*  Append (++)  
*  Concat (join) 
*  Cons (:)  
*  Drop  
*  Elem - Done ( Array membership  (the "in" operator)  ) 
*  ElemIndex - The index (if any) of the first occurrence of an element. 
*  Filter - Done 
*  Find - Done 
*  FindIndex - Find the index of the first element in a list which satisfies a 
    condition.   - Done  
*  FindIndices -  Find the indices of ALL elements in a list which satisfy 
   a condition.   - Done 
*  Fold - Done  
*  Fst 
*  Group 
*  GroupBy
*  Head - Done 
*  Init 
*  Insert 
*  InsertBy
*  Intersect 
*  IntersectBy 
*  Intersperse - Done 
*  IsPrefixOf 
*  IsSuffixOf 
*  Last 
*  Length - Done 
*  Lookup 
*  Lpred - Done.  Return the array ("list") element before the specified one. 
*  Lsucc  - Done.  Return the array ("list") element after the specified one. 
*  Map - Done.   
*  NotElem - Done ( Array non-membership  (the "not in" operator) )  
*  Nub (removes duplicates from a list) 
*  NubBy 
*  Partition 
*  Replicate 
*  Scan - Done  
*  Sequence - the (<|) (|>) and (><) operators in Haskell.   
*  Show 
*  Shows 
*  Snd  
*  Sort  
*  SplitAt 
*  Slice - Done 
*  Tail - Done 
*  Take  
*  Transpose 
*  Union 
*  UnionBy 
*  Unzip  
*  Zip 
*  ZipWith 


This code is released to the public domain. 
"Share and enjoy....."   ;)   


